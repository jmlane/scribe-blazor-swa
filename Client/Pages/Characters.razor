@page "/characters"

@inject ILogger<Characters> Logger
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h1>Characters</h1>
@if (Model.Count > 0)
{
    <ul>
    @foreach (var character in Model)
    {
        <li><a href="/characters/@character.Id"/>@character.Name</li>
    }
    </ul>
}
else
{
    <p>No characters.</p>
}
<button type="button" @onclick="@(() => NavigationManager.NavigateTo("/characters/new"))">Create</button>

@code
{
    List<CharacterListing> Model { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var characters = await HttpClient.GetFromJsonAsync<IEnumerable<Shared.Character>>("/api/characters");
            if (characters is not null)
            {
                Model.AddRange(characters.Select(x => new CharacterListing(x.Id, x.Name)));
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed GET exception.");
        }
    }

    record CharacterListing(Guid Id, string Name);
}